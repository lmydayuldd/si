/**
 * 
 */
package com.sidc.dao.ra;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

/**
 * @author Nandin
 *
 */
public class RCUGroupDeviceDao {

	private RCUGroupDeviceDao() {
	}

	private static class LazyHolder {
		public static final RCUGroupDeviceDao INSTANCE = new RCUGroupDeviceDao();
	}

	public static RCUGroupDeviceDao getInstance() {
		return LazyHolder.INSTANCE;
	}

	private final static String INSERT = "INSERT INTO rcu_group_device(rcu_group_id, rcu_device_id, createdtime, modifiedtime) "
			+ " VALUES(?, ?, now(), now())";

	public int insert(Connection conn, int groupId, int deviceId) throws SQLException {

		int id = -1;
		PreparedStatement psmt = null;
		try {

			psmt = conn.prepareStatement(INSERT, Statement.RETURN_GENERATED_KEYS);

			int i = 0;
			psmt.setInt(++i, groupId);
			psmt.setInt(++i, deviceId);
			psmt.executeUpdate();

			ResultSet rs = psmt.getGeneratedKeys();
			if (rs.next()) {
				id = rs.getInt(1);
			}

		} finally {
			if (psmt != null && !psmt.isClosed()) {
				psmt.close();
			}
		}

		return id;
	}

	private final static String DELETE_ALL = "DELETE FROM rcu_group_device";

	public void delete(Connection conn) throws SQLException {

		PreparedStatement psmt = null;
		try {

			psmt = conn.prepareStatement(DELETE_ALL);
			psmt.executeUpdate();

		} finally {
			if (psmt != null && !psmt.isClosed()) {
				psmt.close();
			}
		}

	}

	private final static String SELECT_BY_RCUGROUPID = "SELECT rcu_device_id FROM rcu_group_device WHERE rcu_group_id = ?";

	public List<String> selectByRcuGroupid(final Connection conn, final int rcuGroupid) throws SQLException {
		List<String> list = new ArrayList<String>();

		PreparedStatement psmt = null;
		try {
			psmt = conn.prepareStatement(SELECT_BY_RCUGROUPID);

			int i = 0;
			psmt.setInt(++i, rcuGroupid);

			final ResultSet rs = psmt.executeQuery();
			if (rs.next()) {
				list.add(rs.getString("rcu_device_id"));
			}

		} finally {
			if (psmt != null && !psmt.isClosed()) {
				psmt.close();
			}
		}
		return list;
	}

	final static String LIST_GROUP = "SELECT rcu_group_id FROM rcu_group_device WHERE rcu_device_id IN ? GROUP BY rcu_group_id";

	public List<String> listGroupID(final Connection conn, final List<Integer> idList) throws SQLException {
		List<String> list = new ArrayList<String>();
		
		PreparedStatement psmt = null;
		String test = "";
		try {

			for (Integer id : idList) {
				test += id + ",";
			}
			psmt = conn.prepareStatement(LIST_GROUP);

			int i = 0;
			psmt.setString(++i, "(" + test.substring(0, test.length()) + ")");

			final ResultSet rs = psmt.executeQuery();
			if (rs.next()) {
				list.add(rs.getString("rcu_group_id"));
			}

		} finally {
			if (psmt != null && !psmt.isClosed()) {
				psmt.close();
			}
		}
		return list;
	}
}
