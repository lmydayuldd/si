package com.sidc.rcu.hmi.logical.modesetting;

import java.util.ArrayList;
import java.util.List;

import com.sidc.rcu.hmi.api.parser.APIParser;
import com.sidc.rcu.hmi.api.request.APIContentRequest;
import com.sidc.rcu.hmi.bean.modesetting.RcuModeBean;
import com.sidc.rcu.hmi.bean.modesetting.RcuModeCatalogueBean;
import com.sidc.rcu.hmi.bean.modesetting.RcuModeDevicesBean;
import com.sidc.rcu.hmi.bean.systeminitial.BlackcoreInitialBean;
import com.sidc.rcu.hmi.common.CommonDataKey;
import com.sidc.rcu.hmi.common.DataCenter;
import com.sidc.rcu.hmi.framework.abs.AbstractAPIProcess;
import com.sidc.rcu.hmi.request.modesetting.ModeSettingInsertRequest;
import com.sidc.sdk.blackcore.rcumodesetting.RcuDeviceListWithModeClient;
import com.sidc.utils.exception.SiDCException;
import com.sidc.utils.log.LogAction;
import com.sidc.utils.status.APIStatus;

public class ModeSettingInsertProcess extends AbstractAPIProcess {

	private ModeSettingInsertRequest entity;

	private List<RcuModeCatalogueBean> modeList = new ArrayList<RcuModeCatalogueBean>();

	public ModeSettingInsertProcess(final ModeSettingInsertRequest entity) {
		this.entity = entity;
	}

	@SuppressWarnings("unchecked")
	@Override
	protected void init() throws SiDCException, Exception {
		// TODO Auto-generated method stub
		final BlackcoreInitialBean blackcoreSetting = (BlackcoreInitialBean) DataCenter.getInstance()
				.get(CommonDataKey.BLACKCORE_SETTING);

		final APIContentRequest request = new APIContentRequest(entity);

		final String json = APIParser.getInstance().toJson(request);

		final String response = new RcuDeviceListWithModeClient("http://10.60.1.39:8080/blackcore", json).execute();

		final RcuModeBean modeEntity = (RcuModeBean) APIParser.getInstance().parses(response, RcuModeBean.class);

		modeList = modeEntity.getMode();

		LogAction.getInstance().debug("entity:" + entity + "|RcuModeBean:" + modeList);

	}

	@Override
	protected Object process() throws SiDCException, Exception {
		// TODO Auto-generated method stub
		for (RcuModeCatalogueBean catalogueEntity : modeList) {
			switch (catalogueEntity.getCatalogue()) {
			case "AIR-CONDITION":
				hvacProcess(catalogueEntity.getDevices());
				break;
			}
		}
		return null;
	}

	@Override
	protected void check() throws SiDCException, Exception {
		// TODO Auto-generated method stub
		if (entity == null) {
			throw new SiDCException(APIStatus.ILLEGAL_ARGUMENT, "entity is empty.");
		}

		if (modeList == null) {
			throw new SiDCException(APIStatus.ILLEGAL_ARGUMENT, "modeList is empty.");
		}
	}

	private void hvacProcess(final List<RcuModeDevicesBean> devicesList) {
		
	}
}
